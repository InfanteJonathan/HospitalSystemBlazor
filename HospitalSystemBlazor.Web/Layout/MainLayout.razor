@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject AuthServ _service
@inject NavigationManager _navigate
@using Blazored.LocalStorage
@inject ILocalStorageService _localStorage


<CascadingAuthenticationState>
    <div class="page">
        <div class="sidebar">
            <NavMenu />
        </div>
        <main>
            <div class="top-row px-4">
                <AuthorizeView>
                    <Authorized>
                        <div class="nav-item px-3" style="display:flex">
                            <NavLink class="nav-link" href="/detalleUser">
                                <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span>
                                Hola @context.User.Claims.FirstOrDefault(c => c.Type == "Email")?.Value !
                            </NavLink>
                            <button @onclick="Logout" class="btn btn-danger">
                                <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Cerrar Sesión
                            </button>
                        </div>
                    </Authorized>
                    <NotAuthorized>
                        <div class="nav-item px-3" style="display:flex">
                            <NavLink class="nav-link" href="/login">
                                <button class="btn btn-primary">Login</button>
                            </NavLink>
                            <NavLink class="nav-link" href="/registrar">
                                <button class="btn btn-success">Register</button>
                            </NavLink>
                        </div>
                    </NotAuthorized>
                </AuthorizeView>
                <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
            </div>

            <article class="content px-4">
                @Body
            </article>
        </main>
    </div>
</CascadingAuthenticationState>

@code {

    private async Task Logout()
    {
        await _service.Logout();
        //customProvider.MarkUserAsLoggedOut();

        // await _localStorage.RemoveItemAsync("token");
        // ((CustomAuthenticationStateProvider)_authStateProvider).MarkUserAsLoggedOut();
        _navigate.NavigateTo("/");
    }

}